
!--------------------------------------------------------------------------
! MADXP file for transferline "BTP to PS" otics calculations
! The protons from the 4 rings (on top of each other) of the PSB
! are recombined and transferred to the PS.
!
! Directory: /afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2011
! Converted to MADX July 2007 O.Berrig
! Execute with:  >madx < btp_ps_6.25_6.29.madx
! As with all madx files - except for LHC and a few special cases - PTC is used (called from madx).
!
!
! This file is for protons with energy of 1.4 GeV and momentum of 2 GeV/c
!--------------------------------------------------------------------------

 title, 'Transferline BTP to PS optics. Protons - 1.4 GeV';

 option, echo;

 set,  format="-21s";
 set,  format="12.8f";







/******************************************************************************
 * BTP
 ******************************************************************************/
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2011/strength/BTP.str';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2011/elements/BTP.ele';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2011/elements/stray.ele';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2011/sequence/BTP.seq';
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2011/aperture/BTP.dbx';
                         ! WARNING. Aperture problems give the error message:
                         !          DA unstable
                         !
                         ! "DA" stands for dynamic aperture
                         ! If this error comes, try to comment out BTP.dbx



/******************************************************************************
 * PS QH=6.21 QV=6.23
 ******************************************************************************/
 call,  file = '/afs/cern.ch/eng/ps/cps/Psring/models/2011/elements/PS_2011.ele';
 call,  file = '/afs/cern.ch/eng/ps/cps/Psring/models/2011/sequence/PS_2011.seq';
 call,  file = '/afs/cern.ch/eng/ps/cps/Psring/models/2011/strength/PS_2011_Injection9_for_OP_group.str';  ! LHC injection: Qx=6.25 Qy=6.29



/*******************************************************************************
 * Install two markers in the PS.
 *   One at the end of SEPTUM42 (=POINTS)
 *   and the other at the end of INJ. KICK45 (=POINTE)
 *******************************************************************************/
 POINTS: marker;
 POINTE: marker;
 POINTT: marker;
 seqedit, sequence=ps;
 flatten;
 Select, flag=seqedit, pattern="^PI.SMH42$";
 Install, element=POINTS, at:=0.4, from=selected; ! End of SMH42
 Select, flag=seqedit, clear = true;
 Select, flag=seqedit, pattern="^PI.KFA45$";
 Install, element=POINTE, at:=0.4, from=selected; ! End of INJ. KICK45
 Select, flag=seqedit, clear = true;
 Select, flag=seqedit, pattern="^PI.KFA45$";
 Install, element=POINTT, at:=0.4, from=selected; ! End of INJ. KICK45. This marker is used for the one turn PS calculation
 Select, flag=seqedit, clear = true;
 endedit;



/*******************************************************************************
 * save a sequence
 *******************************************************************************/
! save, sequence=PS, file=PS.save;
! stop;



/*******************************************************************************
 * Beam
 *******************************************************************************/
 beam, particle=proton, pc=pc;



/*******************************************************************************
 * maketwiss macro
 *******************************************************************************/
 maketwiss : macro={
                    ptc_create_universe;
                    ptc_create_layout,model=2,method=6,nst=5,time=true,exact;
                    ptc_twiss, table=ptc_twiss, beta0=initbeta0, icase=5, no=1; ! , file="twiss"

                    !-----------------------------------------------------
                    ! The "ptc_printframes" statement generates a "ROOT" print file.
                    ! "ROOT" gives a 3-Dimentional drawing of the line.
                    ! "ROOT" can be installed of linux computers, with the commands:
                    !  > source ~/madxsetting.sh
                    !  > root booster.C
                    !
                    ! The file ~/madxsetting.sh contains the following commands:
                    ! setenv ROOTSYS /afs/cern.ch/sw/lcg/external/root/5.14.00g/slc4_ia32_gcc34/root
                    ! setenv LF95_ROOT /afs/cern.ch/sw/fortran/lahey/lf9562
                    ! setenv LD_LIBRARY_PATH ${LF95_ROOT}/lib:${ROOTSYS}/lib
                    ! setenv PATH $ROOTSYS/bin:$LF95_ROOT/bin:$PATH
                    ptc_printframes, file="BTP.C",format=rootmacro;

                    ptc_end;
                   }
!exec, maketwiss;











/****************************************************************************************************
 ****************************************************************************************************
 * BTP
 ****************************************************************************************************
 ****************************************************************************************************/


/******************************************************************************
 * Set initial twiss parameters for BTP line
 ******************************************************************************/
 call, file = '/afs/cern.ch/eng/ps/cps/TransLines/PSB-PS/2011/inp/BTP.inp';

!--------------------------------------------------------------------------
! set initial position and angle (x,px) and (y,py)
! E.g. :
! x0 := 0.0;
! px0:= 0.0;
! y0 := 0.0;
! py0:= 0.0;
!--------------------------------------------------------------------------

 INITBETA0:  BETA0,
      BETX = BETX0,
      ALFX = ALFX0,
      MUX  = MUX0,
      BETY = BETY0,
      ALFY = ALFY0,
      MUY  = MUY0,
      X    = X0,
      PX   = PX0,
      Y    = Y0,
      PY   = PY0,
      T    = T0,
      PT   = PT0,
      DX   = DX0,
      DPX  = DPX0,
      DY   = DY0,
      DPY  = DPY0;



/*******************************************************************************
 * Use BTP
 *******************************************************************************/
 use, sequence=BTP;



/*******************************************************************************
 * matching
 *******************************************************************************/
/***

 option, -info;
 option, -echo;

 match, use_macro;
          vary, name=DY0 , step=0.01;
          vary, name=DPY0, step=0.01;

          use_macro,name=maketwiss;

          constraint, expr=table(ptc_twiss,BTP_BHZ10_1,disp3)=-0.04022 ;
          constraint, expr=table(ptc_twiss,BTP_BHZ10_1,disp4)= 0.00151 ;

!         jacobian,  calls= 25, tolerance=1.0E-15, bisec=9;
!         simplex,   calls= 15, tolerance=1.0E-12;
          lmdif,     calls=100, tolerance=1.0E-22;
 endmatch;
/***/

option, info;
option, echo;



/*******************************************************************************
 * twiss for BTP line
 *******************************************************************************/
! ns    ~ longitudinal number of sigma
! nt    ~ transverse   number of sigma
! dimxc ~ size-x with dispersion, dimyc ~ size-y with dispersion,

 ns = 2;
 nt = 3;
 dimxc := sqrt( nt^2*table(ptc_twiss,betx)*beam->ex + ns^2*(beam->sige*table(ptc_twiss,dx))^2 );
 dimyc := sqrt( nt^2*table(ptc_twiss,bety)*beam->ey + ns^2*(beam->sige*table(ptc_twiss,dy))^2 );

 exec, maketwiss;



/***************************************************
 * Write ptc_twiss table. NB! Values at end of elements
 ***************************************************/
 select,flag=ptc_twiss,clear;
 select,flag=ptc_twiss, column = name,s,x,px,disp1,disp2,alfa11,beta11,mu1,
                                        y,py,disp3,disp4,alfa22,beta22,mu2;
 write,table=ptc_twiss,file="../out/optics_BTP_6.25_6.29.out";













/****************************************************************************************************
 ****************************************************************************************************
 * SEPTUM42 to INJ. KICK45
 ****************************************************************************************************
 ****************************************************************************************************/


/******************************************************************************
 * Set initial twiss parameters for SEPTUM42 to INJ. KICK45
 ******************************************************************************/
 INITBETA0:  BETA0,
      BETX = table(ptc_twiss,pointS,beta11),
      ALFX = table(ptc_twiss,pointS,alfa11),
      MUX  = 0,
      BETY = table(ptc_twiss,pointS,beta22),
      ALFY = table(ptc_twiss,pointS,alfa22),
      MUY  = 0,
      X    = 0,
      PX   = 0,
      Y    = 0,
      PY   = 0,
      T    = 0,
      PT   = 0,
      DX   = table(ptc_twiss,pointS,disp1),
      DPX  = table(ptc_twiss,pointS,disp2),
      DY   = table(ptc_twiss,pointS,disp3),
      DPY  = table(ptc_twiss,pointS,disp4);



/*******************************************************************************
 * USE PS ( from SEPTUM42 to INJ. KICK45 )
 *   POINTS is at the end of SEPTUM42
 *   POINTE is at the end of INJ. KICK45
 *******************************************************************************/
 USE, sequence=PS, range=POINTS/POINTE;



/*******************************************************************************
 * save a sequence
 *******************************************************************************/
!save, sequence=PS, file=PS_INJ_CHAN.save; ! If this statement is used, remember to add a new USE command
!use , sequence=PS, range=POINTS/POINTE;
!stop;



/*******************************************************************************
 * twiss for SEPTUM42 to INJ. KICK45
 *******************************************************************************/
! ns    ~ longitudinal number of sigma
! nt    ~ transverse   number of sigma
! dimxc ~ size-x with dispersion, dimyc ~ size-y with dispersion,

 ns = 2;
 nt = 3;
 dimxc := sqrt( nt^2*table(ptc_twiss,betx)*beam->ex + ns^2*(beam->sige*table(ptc_twiss,dx))^2 );
 dimyc := sqrt( nt^2*table(ptc_twiss,bety)*beam->ey + ns^2*(beam->sige*table(ptc_twiss,dy))^2 );

 exec, maketwiss;



/***************************************************
 * Write ptc_twiss table. NB! Values at end of elements
 ***************************************************/
 select,flag=ptc_twiss,clear;
 select,flag=ptc_twiss, column = name,s,x,px,disp1,disp2,alfa11,beta11,mu1,
                                        y,py,disp3,disp4,alfa22,beta22,mu2;
 write,table=ptc_twiss,file="../out/optics_SEP42toINJKICK45_6.25_6.29.out";



!-----------------------------------------------------
! Plot BTP
!-----------------------------------------------------
/* Use >gv madx.ps to plot */

!PLOT, VAXIS1=BETX,HAXIS=S,
!     SPLINE=FALSE, VMIN=-2, VMAX=30, COLOUR=100, RANGE=#S/#E, FILE="../out/madx";














/****************************************************************************************************
 ****************************************************************************************************
 * One turn of PS
 ****************************************************************************************************
 ****************************************************************************************************/


/******************************************************************************
 * Set initial twiss parameters for POINTE i.e. end of INJ. KICK45
 ******************************************************************************/
 INITBETA0:  BETA0,
      BETX = table(ptc_twiss,pointE,beta11),
      ALFX = table(ptc_twiss,pointE,alfa11),
      MUX  = 0,
      BETY = table(ptc_twiss,pointE,beta22),
      ALFY = table(ptc_twiss,pointE,alfa22),
      MUY  = 0,
      X    = 0,
      PX   = 0,
      Y    = 0,
      PY   = 0,
      T    = 0,
      PT   = 0,
      DX   = table(ptc_twiss,pointE,disp1),
      DPX  = table(ptc_twiss,pointE,disp2),
      DY   = table(ptc_twiss,pointE,disp3),
      DPY  = table(ptc_twiss,pointE,disp4);



/*******************************************************************************
 * USE PS ( one turn, from POINTE to POINTE )
 *   POINTE is at the end of INJ. KICK45
 *******************************************************************************/
 USE, sequence=PS, range=POINTE/POINTT;
!seqedit, sequence=PS; cycle, start=POINTE; endedit;



/*******************************************************************************
 * save a sequence
 *******************************************************************************/
!save, sequence=PS, file=PS.save; ! If this statement is used, remember to add a new USE command
!use , sequence=PS;
!stop;



/*******************************************************************************
 * twiss for SEPTUM42 to INJ. KICK45
 *******************************************************************************/
! ns    ~ longitudinal number of sigma
! nt    ~ transverse   number of sigma
! dimxc ~ size-x with dispersion, dimyc ~ size-y with dispersion,

 ns = 2;
 nt = 3;
 dimxc := sqrt( nt^2*table(ptc_twiss,betx)*beam->ex + ns^2*(beam->sige*table(ptc_twiss,dx))^2 );
 dimyc := sqrt( nt^2*table(ptc_twiss,bety)*beam->ey + ns^2*(beam->sige*table(ptc_twiss,dy))^2 );

 exec, maketwiss;



/***************************************************
 * Write ptc_twiss table. NB! Values at end of elements
 ***************************************************/
 select,flag=ptc_twiss,clear;
 select,flag=ptc_twiss, column = name,s,x,px,disp1,disp2,alfa11,beta11,mu1,
                                        y,py,disp3,disp4,alfa22,beta22,mu2;
 write,table=ptc_twiss,file="../out/optics_PS_turn_6.25_6.29.out";



!-----------------------------------------------------
! Plot BTBTP1
!-----------------------------------------------------
/* Use >gv madx.ps to plot */

!PLOT,VAXIS1=BETX,HAXIS=S,
!     SPLINE=FALSE, VMIN=-2, VMAX=30, COLOUR=100, RANGE=#S/#E, FILE="../out/madx";


stop;












!--------------------------------------------------------------------------
! Some useful commands:
!--------------------------------------------------------------------------



!show, dfa1kick;


 /**********************************************************
 select, flag=twiss,column=name, s, x, px, y, py, alfy,bety;
 twiss , centre ,
       , BETX   = BETX0,    ALFX = ALFX0,   MUX  = MUX0
       , X      = X0   ,    PX   = PX0
       , DX     = DX0  ,    DPX  = DPX0
       , BETY   = BETY0,    ALFY = ALFY0,   MUY  = MUY0
       , Y      = Y0   ,    PY   = PY0
       , DY     = DY0  ,    DPY  = DPY0
       , DELTAP = PSHIFT
       , file=optics.out;
 ***********************************************************/



/*
Assign, echo="KICKER_STRENGTHX";
print, text="FAST BUMP";
show, KICKDFA242, KICKDFA254;
Assign, echo=terminal;
*/


! exec, pt1;
! value,table(twiss,BTL$START,py);


stop;

