 option, echo;
 option, info;
 option, warn;

!--------------------------------------------------------------------------
! File to calculate the "s" position of each element in BI3 line using the
! recombination vertical angles determined in the BI.matching file.
! A BI3.seq file isautomaticaly generated.
!
! File called by the BI.madx master file
!
! This file is for protons with energy of 1.4 GeV and momentum of 2 GeV/c
!--------------------------------------------------------------------------
! Directory: /afs/cern.ch/eng/ps/cps/TransLines/Linac2-PSB/2014/cmdx/matching_bi_line
! S file created in February 2014 by V.Raginel, O.Berrig and B. Mikulec
!--------------------------------------------------------------------------

/*****************************************************************************
 * TITLE
 *****************************************************************************/
 title, 'Generate BI3.seq';


/*****************************************************************************
 * CALL element definitions and the BImechanical.seq, which contains the deflection points
 *****************************************************************************/
 call, file = '../../strength/bi.str';
 call, file = 'matching_angle_position.prt';


/*****************************************************************************
 * CALL element definitions and the BImechanical.seq, which contains the deflection points
 *****************************************************************************/
 call, file = '../../elements/ltb.ele';
 call, file = '../../elements/bi.ele';
 call, file = 'BImechanical.seq';


 !-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 !  Calculate the 's' position of all the elements
 !-----------------------------------------------------------------------------------------------------------------------------------------------------------------

 !* From LTB.BHZ40 to VVS10 *!
 !-----------!
 LTB.BHZ40.spos   =  LTB.BHZ40.mechpos;
 LTB.MBL10.spos   =  LTB.MBL10.mechpos;
 LTB.MBL20.spos   =  LTB.MBL20.mechpos;
  BI.VPI11.spos   =   BI.VPI11.mechpos;
  BI.DHZ10.spos   =   BI.DHZ10.mechpos;
  BI.DVT10.spos   =   BI.DVT10.mechpos;
  BI.BPM00.spos   =   BI.BPM00.mechpos;
  BI.BTV10.spos   =   BI.BTV10.mechpos;
  BI.STPFA10.spos = BI.STPFA10.mechpos;
  BI.STPSW10.spos = BI.STPSW10.mechpos;
  BI.BPM10.spos   =   BI.BPM10.mechpos;
  BI.DHZ20.spos   =   BI.DHZ20.mechpos;
  BI.DVT20.spos   =   BI.DVT20.mechpos;
  BI.QNO10.spos   =   BI.QNO10.mechpos;
  BI.QNO20.spos   =   BI.QNO20.mechpos;
  BI.BPM20.spos   =   BI.BPM20.mechpos;
  BI.BCT10.spos   =   BI.BCT10.mechpos;
  BI.VVS10.spos   =   BI.VVS10.mechpos;


 angle = -dBIDVT30;
 E1    = 0;
 E2    = angle - E1;
 L     = LBIDVT30;
 //-----------//
 Lbeam    = L*angle/(sin(E1)+sin(E2));
 Lgeom    = 2*L*tan(angle/2)/(sin(E1)+sin(E2));
 DL.DVT30 = Lbeam-Lgeom;
 !-----------!
 BI.DVT30.spos = BI.DVT30.mechpos + DL.DVT30/2;
 BI.DHZ30.spos = BI.DVT30.spos ;  ! DHZ30 and DVT30 are really the same magnet;
                                  ! Since DVT30 is defined as an SBEND and DHZ as a KICKER, they cannot occupy the same position.
                                  ! DHZ30 is commented out
 BI.BTV20.spos = BI.DVT30.spos + (BI.BTV20.mechpos - BI.DVT30.mechpos)/cos(dBIDVT30) + DL.DVT30/2;


 !* From QNO30 to UMA30 *!
 !-----------!
 angle = -dBIQNO30;
 E1    =  dBIDVT30;
 E2    = angle - E1;
 L     = LBIQNO30;
 !-----------!
 Lbeam    = L*angle/(sin(E1)+sin(E2));
 Lgeom    = 2*L*tan(angle/2)/(sin(E1)+sin(E2));
 DL.QNO30 = Lbeam-Lgeom;
 !-----------!
 BI.QNO30.spos = BI.DVT30.spos + (BI.QNO30.mechpos - BI.DVT30.mechpos)/cos(dBIDVT30) + DL.DVT30/2 + DL.QNO30/2;
 BI.BPM30.spos = BI.QNO30.spos + (BI.BPM30.mechpos - BI.QNO30.mechpos)/cos(dBIDVT30+dBIQNO30)     + DL.QNO30/2;


 !*  QNO40  *!
 !-----------!
 angle = dBIQNO40;
 E1    = dBIQNO40;
 E2    = angle - E1;
 L     = LBIQNO40;
 !-----------!
 Lbeam    = L*angle/(sin(E1)+sin(E2));
 Lgeom    = 2*L*tan(angle/2)/(sin(E1)+sin(E2));
 DL.QNO40 = Lbeam-Lgeom;
 !-----------!
 BI.QNO40.spos = BI.QNO30.spos + (BI.QNO40.mechpos - BI.QNO30.mechpos)/cos(dBIDVT30+dBIQNO30) + DL.QNO30/2 + DL.QNO40/2;
 BI.DIS0.spos  = BI.QNO40.spos + (BI.DIS0.mechpos  - BI.QNO40.mechpos)/cos(0)                              + DL.QNO40/2;
 BI.DIS1.spos  = BI.QNO40.spos + (BI3.DIS1.mechpos - BI.QNO40.mechpos)/cos(0)                              + DL.QNO40/2;
 BI.DIS2.spos  = BI.QNO40.spos + (BI3.DIS2.mechpos - BI.QNO40.mechpos)/cos(0)                              + DL.QNO40/2;


 !*  DIS3   *!
 !-----------!
 angle = dBI3DIS3;
 E1    = 0;
 E2    = angle - E1;
 L     = LBI3DIS3;

 !-----------!
 Lbeam    = L*angle/(sin(E1)+sin(E2));
 Lgeom    = 2*L*tan(angle/2)/(sin(E1)+sin(E2));
 DL.DIS3  = Lbeam-Lgeom;
 !-----------!
 BI.DIS3.spos  = BI.QNO40.spos + (BI3.DIS3.mechpos - BI.QNO40.mechpos)/cos(0) + DL.QNO40/2 + DL.DIS3/2;


 !*  DIS4   *!
 !-----------!
 angle = dBI3DIS4;
 E1    = -dBI3DIS3;
 E2    = angle - E1;
 L     = LBI3DIS4;
 !-----------!
 Lbeam    = L*angle/(sin(E1)+sin(E2));
 Lgeom    = 2*L*tan(angle/2)/(sin(E1)+sin(E2));
 DL.DIS4  = Lbeam-Lgeom;
 !-----------!
 BI.DIS4.spos  = BI.DIS3.spos + (BI3.DIS4.mechpos - BI3.DIS3.mechpos)/cos(dBI3DIS3) + DL.DIS3/2 + DL.DIS4/2;


 !*  DVT40  *!
 !-----------!
 angle = -dBI3DVT40;
 E1    = dBI3DIS3+dBI3DIS4;
 E2    = angle - E1;
 L     = LBIDVT40;
 !-----------!
 Lbeam    = L*angle/(sin(E1)+sin(E2));
 Lgeom    = 2*L*tan(angle/2)/(sin(E1)+sin(E2));
 DL.DVT40 = Lbeam-Lgeom;
 !-----------!
 BI.DVT40.spos = BI.DIS4.spos + (BI3.DVT40.mechpos  - BI3.DIS4.mechpos)/cos(dBI3DIS3+dBI3DIS4) + DL.DIS4/2 + DL.DVT40/2;
 BI.DHZ40.spos = BI.DVT40.spos;   ! DHZ40 and DVT40 are really the same magnet;
                                  ! Since DVT40 is defined as an SBEND and DHZ40 as a KICKER, they cannot occupy the same position.
                                  ! DHZ40 is commented out
 BI.VPI12.spos  = BI.DVT40.spos + (BI.VPI12.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.BTV30.spos  = BI.DVT40.spos + (BI.BTV30.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.SMV.spos    = BI.DVT40.spos + (BI3.SMV10.mechpos - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2; ! virtual element. Does not exist
 BI.SMVHDP.spos = BI.DVT40.spos + (BI.SMVHDP.mechpos - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.MBL20.spos  = BI.DVT40.spos + (BI.MBL20.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.MBLI30.spos = BI.DVT40.spos + (BI.MBLI30.mechpos - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.MBLS30.spos = BI.DVT40.spos + (BI.MBLS30.mechpos - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.BVT.spos    = BI.DVT40.spos + (BI3.BVT.mechpos   - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2; ! virtual element. Does not exist
 BI.QNO50.spos  = BI.DVT40.spos + (BI.QNO50.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.QNO60.spos  = BI.DVT40.spos + (BI.QNO60.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.DHZ50.spos  = BI.DVT40.spos + (BI.DHZ50.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.DVT50.spos  = BI.DVT40.spos + (BI.DVT50.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.BPM40.spos  = BI.DVT40.spos + (BI.BPM40.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.BTV40.spos  = BI.DVT40.spos + (BI.BTV40.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.VPI14.spos  = BI.DVT40.spos + (BI.VPI14.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.BCT20.spos  = BI.DVT40.spos + (BI.BCT20.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.BPM50.spos  = BI.DVT40.spos + (BI.BPM50.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.VVS20.spos  = BI.DVT40.spos + (BI.VVS20.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.DHZ70.spos  = BI.DVT40.spos + (BI.DHZ70.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.DVT70.spos  = BI.DVT40.spos + (BI.DVT70.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI.INJPT.spos  = BI.DVT40.spos + (BI.INJPT.mechpos  - BI3.DVT40.mechpos)/cos(abs(dBI3DIS3+dBI3DIS4-dBI3DVT40)) + DL.DVT40/2;
 BI3.END.spos   = BI.INJPT.spos;





!-----------------------------------------------------------------------------------------------------------------------------------------------------------------
!  BI3 sequence
!
!  - Some vacuum equipements are commented out to prevent conflict in MADX. These equipements have the same position as other equipments or are overlaping
!    with other equipments.
!-----------------------------------------------------------------------------------------------------------------------------------------------------------------

 BI3:  SEQUENCE, refer = centre , l  =     BI3.END.spos;
   BEGBI            : MARKER    , AT =     0.0000000000;
   LTB.BHZ40                    , AT =   LTB.BHZ40.spos;
   LTB.MBL10                    , AT =   LTB.MBL10.spos;
   LTB.MBL20                    , AT =   LTB.MBL20.spos;
   BI.VPI11                     , AT =    BI.VPI11.spos;
   BI.DHZ10                     , AT =    BI.DHZ10.spos;
   BI.DVT10                     , AT =    BI.DVT10.spos;
   BI.BPM00                     , AT =    BI.BPM00.spos;
   BI.BTV10                     , AT =    BI.BTV10.spos;
   BI.STPFA10                   , AT =  BI.STPFA10.spos;
   BI.STPSW10                   , AT =  BI.STPSW10.spos;
   BI.BPM10                     , AT =    BI.BPM10.spos;
   BI.DHZ20                     , AT =    BI.DHZ20.spos;
   BI.DVT20                     , AT =    BI.DVT20.spos;
   BI.QNO10                     , AT =    BI.QNO10.spos;
   BI.QNO20                     , AT =    BI.QNO20.spos;
   BI.BPM20                     , AT =    BI.BPM20.spos;
   BI.BCT10                     , AT =    BI.BCT10.spos;
   BI.VVS10                     , AT =    BI.VVS10.spos;
   BI.DHZ30                     , AT =    BI.DHZ30.spos;
   BI.DVT30                     , AT =    BI.DVT30.spos;
   BI.BTV20                     , AT =    BI.BTV20.spos;
   BI.QNO30                     , AT =    BI.QNO30.spos;
   BI.BPM30                     , AT =    BI.BPM30.spos;
   BI.QNO40                     , AT =    BI.QNO40.spos;
   BI.DIS0                      , AT =     BI.DIS0.spos;
   BI3.DIS1                     , AT =     BI.DIS1.spos;
   BI3.DIS2                     , AT =     BI.DIS2.spos;
   BI3.DIS3                     , AT =     BI.DIS3.spos;
   BI3.DIS4                     , AT =     BI.DIS4.spos;
   BI.DHZ40                     , AT =    BI.DHZ40.spos;
   BI3.DVT40                    , AT =    BI.DVT40.spos;
   BI.VPI12                     , AT =    BI.VPI12.spos;
   BI.BTV30                     , AT =    BI.BTV30.spos;
   BI.SMVHDP                    , AT =   BI.SMVHDP.spos;
   BI3.SMV10                    , AT =      BI.SMV.spos;
   BI.MBL20                     , AT =    BI.MBL20.spos;
   BI.MBLI30                    , AT =   BI.MBLI30.spos;
   BI.MBLS30                    , AT =   BI.MBLS30.spos;
   BI3.BVT10                    , AT =      BI.BVT.spos;
   BI3.QNO50                    , AT =    BI.QNO50.spos;
   BI3.QNO60                    , AT =    BI.QNO60.spos;
   BI3.DHZ50                    , AT =    BI.DHZ50.spos;
   BI3.DVT50                    , AT =    BI.DVT50.spos;
   BI3.BPM40                    , AT =    BI.BPM40.spos;
   BI3.BTV40                    , AT =    BI.BTV40.spos;
   BI3.VPI14                    , AT =    BI.VPI14.spos;
   BI3.BCT20                    , AT =    BI.BCT20.spos;
   BI3.BPM50                    , AT =    BI.BPM50.spos;
   BI3.VVS20                    , AT =    BI.VVS20.spos;
   BI3.DHZ70                    , AT =    BI.DHZ70.spos;
   BI3.DVT70                    , AT =    BI.DVT70.spos;
   BI3.INJPT        :   MARKER  , AT =    BI.INJPT.spos;
   ENDSEQUENCE;

 assign, echo="help";
 print, text="! BI3 sequence, automatically generated from BI3.madx file ";
 print, text="! Sequence starts at the entry flange of the BHZ40 magnet";
 print, text="! Sequence ends at the injection point into the BOOSTER ?? ";
 print, text=" ";
 assign, echo=terminal;

 option, -warn;
 save, sequence=BI3, file='BI3.seq', bare;

 system, "cat BI3.seq >> help; cat help > BI3.seq";


 system, "cp BI3.seq help ; sed 's/ltb.mbl10/! ltb.mbl10/'   < help > BI3.seq ";
 system, "cp BI3.seq help ; sed 's/ltb.mbl20/! ltb.mbl20/'   < help > BI3.seq ";
 system, "cp BI3.seq help ; sed 's/bi.mbl20/! bi.mbl20 /'    < help > BI3.seq ";
 system, "cp BI3.seq help ; sed 's/bi.dhz30/! bi.dhz30 /'    < help > BI3.seq ";
 system, "cp BI3.seq help ; sed 's/bi.dhz40/! bi.dhz40 /'    < help > BI3.seq ";
 system, "cp BI3.seq help ; sed 's/bi.mbli30/! bi.mbli30/'   < help > BI3.seq ";
 system, "cp BI3.seq help ; sed 's/bi.mbls30/! bi.mbls30/'   < help > BI3.seq ";
 system, "rm help";

 option, info;
 option, warn;
 option, echo;


