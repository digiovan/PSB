/*****************************************************
 *
 * MADX file for the LT-LTB-BI lines from LINAC2 to the PS BOOSTER
 *
 * Directory: /afs/cern.ch/eng/ps/cps/TransLines/Linac2-PSB/2014/
 *
 * Execute with:  >madx < ltltbbi.madx
 * This file is for Protons at 311 MeV/c (Ekin=50 MeV, BRHO=1.03527 "the magnetic rigidity of the protons")
 *****************************************************/


/*****************************************************************************
 * TITLE
 *****************************************************************************/
 title, 'LT-LTB-BI 2014 optics. Protons - 311 MeV/c (E_kin=50 MeV)';

 option, echo;
!option, RBARC=FALSE;



/*****************************************************************************
 * INITIALIZATION
 *****************************************************************************/
  calculatecenter(filename, element): macro = {

    option, -echo, -info, -warn;
 // Copy "mysurvey" file to "mysurveyrow" file - adding row number
    readmytable,file=filename,table=mysurvey;
    n_elem  =  table(mysurvey, tablelength);
    create,table=mysurveyrow,column=_NAME,Z,X,Y,row;
    row=0;
    while ( row < n_elem ) {
          row = row+1;
          setvars, table=mysurvey, row=row;
          fill,table=mysurveyrow;
    }
!   write,table=mysurveyrow,file=file_name_row;


 // Read the row number for the element where we want to calculate the center point
    row = table(mysurveyrow,  element, row);
!   value, row;
    if ( row < 1 ) { print, text="Error: row is less than 1. Stop"; stop; }

 // Calculate the first straight line
    SETVARS,TABLE=mysurvey,ROW=row-1;
    pos0.x = Z;
    pos0.y = X;
    pos0mech.x = sqrt((Z-1924.28279270772577547177)^2+(X-1987.78747817067664982460)^2); !  1924.28279270772577547177 and 1987.78747817067664982460 represents the starting point of the LT line
    pos0mech.y = Y;
!   value, pos0.x, pos0.y;
!   value, pos0mech.x, pos0mech.y;
    SETVARS,TABLE=mysurvey,ROW=row;
    pos1.x = Z;
    pos1.y = X;
    pos1mech.x = sqrt((Z-1924.28279270772577547177)^2+(X-1987.78747817067664982460)^2); !  1924.28279270772577547177 and 1987.78747817067664982460 represents the starting point of the LT line
    pos1mech.y = Y;
!   value, pos1.x, pos1.y;
!   value, pos1mech.x, pos1mech.y;
    x.center = (pos0.x+pos1.x)/2;
    y.center = (pos0.y+pos1.y)/2;
!   value, x.center,  y.center ;

    delete,table=mysurvey;
    delete,table=mysurveyrow;

    option, echo, info, warn;

};


/*****************************************************************************
 * LT
 * NB! The order of the .ele .str and .seq files matter.
 *     The reason is a >feature< of MADX
 *
 *****************************************************************************/
 call, file = '../../strength/lt.str';
 call, file = '../../elements/lt.ele';
 call, file = '../../sequence/lt.seq';
!call, file = '../../aperture/lt.dbx';



/*****************************************************************************
 * LTB
 * NB! The order of the .ele .str and .seq files matter.
 *     The reason is a >feature< of MADX
 *
 *****************************************************************************/
 call, file = '../../strength/ltb.str';
 call, file = '../../elements/ltb.ele';
 call, file = '../../sequence/ltb.seq';
!call, file = '../../aperture/ltb.dbx';



/*****************************************************************************
 * BI
 * NB! The order of the .ele .str and .seq files matter.
 *     The reason is a >feature< of MADX
 *
 *****************************************************************************/
 call, file = '../../strength/bi.str';
 call, file = '../../elements/bi.ele';
 call, file = '../../sequence/BI1.seq';
!call, file = '../../aperture/bi.dbx';



/*****************************************************************************
 * build up the geometry of the beam lines
 *****************************************************************************/
ltltbbi: sequence, refer=ENTRY,  l = 130.7321751925 ;
  lt                          , at =              0 ;
  ltb                         , at := 53.4728739515 ; ! 53.472856 + 17.9515 um ;
  bi1                         , at := 82.1757638125 ; ! 53.4728739515 + 28.7028898610. L=48.5564113800 + 82.1757638125 130.7321751925
endsequence;

!save, sequence=ltltbbi, file=ltltbbi.save;



/*****************************************************************************
 * set initial twiss parameters
 *****************************************************************************/
call, file = '../../inp/ltp.inp';



/*****************************************************************************
 * store initial parameters in memory block
 *****************************************************************************/
INITBETA0: BETA0,
  BETX=BETX0,
  ALFX=ALFX0,
  MUX=MUX0,
  BETY=BETY0,
  ALFY=ALFY0,
  MUY=MUY0,
  X=X0,
  PX=PX0,
  Y=Y0,
  PY=PY0,
  T=T0,
  PT=PT0,
  DX=DX0,
  DPX=DPX0,
  DY=DY0,
  DPY=DPY0;


/*******************************************************************************
 * Beam
 * NB! beam->ex == (beam->exn)/(beam->gamma*beam->beta*4)
 *******************************************************************************/
 Beam, particle=PROTON,pc=0.311,exn=(12.0E-6)*4.0,eyn=(6.0E-6)*4.0, sige=1E-3;



/*******************************************************************************
 * survey
 *******************************************************************************/
 a1 =             1.92035910512371099657 ;
 z0 =          1924.28279270772577547177 ;
 x0 =          1987.78747817067664982460 ;
 angle_bhz20 =    0.27922619120194303033 ;
 angle_bhz30 =   -0.38395040993805129581 ;
 dl = 0;



 set,  format="30.20f";

 sur1 : macro={

               call, file = '../../elements/lt.ele';
               use, sequence=ltltbbi;
               select, flag=survey,clear;
               select, flag=survey, column=name,s,l,z,x,y;
               survey, z0=z0, x0=x0, y0=y0 ! Start point of VVS10
                     , theta0:=a1
                     , file="ltltbbi.sur";

               exec, calculatecenter("ltltbbi.sur", LT.BHZ20 );
               option, -info;
               BHZ200.X = pos0.x  ;
               BHZ200.Y = pos0.y  ;
               BHZ201.X = pos1.x  ;
               BHZ201.Y = pos1.y  ;

               exec, calculatecenter("ltltbbi.sur", LT.BHZ30 );
               option, -info;
               BHZ300.X = pos0.x  ;
               BHZ300.Y = pos0.y  ;
               BHZ301.X = pos1.x  ;
               BHZ301.Y = pos1.y  ;

               value, a1  ;
               value, z0  ;
               value, x0  ;
               value, angle_BHZ20 ;
               value, LT.BHZ20->L ;
               value, angle_BHZ30 ;
               value, LT.BHZ30->L ;
               value, BHZ300.X, BHZ300.Y;
               value, BHZ301.X, BHZ301.Y;
               value, (BHZ301.Y                -(5959.4648829409325 -  2.047697406613818 *BHZ301.X))*100;
               value, (BHZ300.Y                -(29206.694135821726 - 14.193898483527226 *BHZ300.X))*100;
              }
 exec, sur1; ! NB: The result of the survey is in the file: "ltltbbi.sur"


/*************************************
 * Note that the coordinates used by TS/SU
 * and in MADX are different:
 *      MADX    TS/SU
 *       Z        X
 *       X        Y
 *       Y        Z
 *************************************/


/******************************************************************************************
 * This matching is used to find the initial angle and the initial coordinates of the beam.
 * The basis of the matching is the files:
 * /afs/cern.ch/eng/ps/cps/TransLines/Linac2-PSB/2014/cmdx/LT_BEAM_COORDINATES_11APR2014.csv
 * /afs/cern.ch/eng/ps/cps/TransLines/Linac2-PSB/2014/cmdx/LT_line_GEODE.nb
 *
 * The equation from start to BHZ20:      y =  7266.547687085423  -  2.7432351569733755 x
 * The equation between BHZ20 and BHZ30:  y = 29206.694135821726  - 14.193898483527226  x
 * The equation from BHZ30 to the END:    y =  5959.4648829409325 -  2.047697406613818  x
 *
 ******************************************************************************************/


 match, use_macro;

    use_macro,name=sur1;

    constraint, expr=table(survey,LT$START,X)-(7266.547687085423  -  2.7432351569733755*table(survey,LT$START,Z)) =0;
    constraint, expr=table(survey,LT.BCT20,X)-(7266.547687085423  -  2.7432351569733755*table(survey,LT.BCT20,Z)) =0;
    constraint, expr=BHZ200.Y                -(7266.547687085423  -  2.7432351569733755*BHZ200.X)                 =0;
!
    constraint, expr=table(survey,LT.BHZ20,X)-(29206.694135821726 - 14.193898483527226 *table(survey,LT.BHZ20,Z)) =0;
    constraint, expr=table(survey,LT$END,X)  -(29206.694135821726 - 14.193898483527226 *table(survey,LT$END,Z))   =0;
    constraint, expr=(BHZ300.Y               -(29206.694135821726 - 14.193898483527226 *BHZ300.X))*100            =0;

    constraint, expr=(BHZ301.Y               -(5959.4648829409325 -  2.047697406613818 *BHZ301.X))*100            =0;
    constraint, expr=table(survey,LTB$END,X) -(5959.4648829409325 -  2.047697406613818 *table(survey,LTB$END,Z))  =0;


!   vary, name=a1            , step = 0.00000000001, LOWER=   1.5 ,UPPER=   2.5;
!   vary, name=z0            , step = 0.00000000001, LOWER=1900.0 ,UPPER=2000.0;
!   vary, name=x0            , step = 0.00000000001, LOWER=1900.0 ,UPPER=2000.0;
!   vary, name=angle_BHZ20   , step = 0.00000000001, LOWER=   0.2 ,UPPER=   0.4;
!   vary, name=angle_BHZ30   , step = 0.00000000001, LOWER=  -0.4 ,UPPER=   0.4;
!   vary, name=dl            , step = 0.00000000001, LOWER=  -0.1 ,UPPER=   0.1;

!   lmdif, calls=1000, tolerance=6E-26;
!   simplex, calls = 1000, tolerance = 1.0E-25;
    vary, name=dummy; lmdif, calls=1, tolerance=1.E-15; endmatch; stop;
 endmatch;

 exec, sur1;
  // write, table=survey;
 value, angle_BHZ20;
 value, table(survey,LT.BHZ20,Z);
  stop;
 /*************************************/



/*******************************************************************************
 * Use
 *******************************************************************************/
 use, sequence=ltltbbi;




/*******************************************************************************
 * matching
 *******************************************************************************
option, info;
option, echo;

!--------------------  Matching routine  ---------------
!optimum: macro=
! {
!   match, sequence=ltltbbi, beta0=initbeta0;

!weight, betx=10.0, alfx=100.0, dx=100.0, dpx=1000.0,
!        bety=10.0, alfy=100.0, dy=100.0, dpy=1000.0;


! vary LT quads (starting after first bending)

!         vary, name=KLT.QFN50, step=1E-4;
!         vary, name=KLT.QDN55, STEP=1E-4;
!         vary, name=KLT.QFN60, STEP=1E-4;
!         vary, name=KLT.QFW70, STEP=1E-4;
!         vary, name=KLT.QDN75, STEP=1E-4;

! vary LTB quads

!         vary, name=KLTB.QFN10, STEP=1E-4;
!         vary, name=KLTB.QDN20, STEP=1E-4;
!         vary, name=KLTB.QDW40, STEP=1E-4;
!         vary, name=KLTB.QFW50, STEP=1E-4;
!         vary, name=KLTB.QDW60, STEP=1E-4;

! vary BI quads

!         vary, name=KBI.QNO10, STEP=1E-4;
!         vary, name=KBI.QNO20, STEP=1E-4;
!         vary, name=KBI.QNO30, STEP=1E-4;
!         vary, name=KBI.QNO40, STEP=1E-4;
!         vary, name=KBI.QNO50, STEP=1E-4;
!         vary, name=KBI.QNO60, STEP=1E-4;

! constraints at PSB injection point

!          constraint, range=BI.INJPT, BETX= 4.89812;
!          constraint, range=BI.INJPT, ALFX= 1.12768;
!          constraint, range=BI.INJPT, BETY= 19.41562;
!          constraint, range=BI.INJPT, ALFY= -4.20571;
!          constraint, range=BI.INJPT, DX=   -7.04869;
!          constraint, range=BI.INJPT, DPX=  0.;
!          constraint, range=BI.INJPT, DY=   0.;
!          constraint, range=BI.INJPT, DPY=  0.;

!          constraint, range=#S/BI.INJPT, BETX<80, BETY<50;

!          lmdif, tolerance=1e-12, calls=10000;
!          lmdif,calls=100;
!   endmatch;
! };


!exec, optimum;

option, info;
option, echo;


 ********/

/*******************************************************************************
 * twiss
 *******************************************************************************
! ns    ~ longitudinal number of sigma
! nt    ~ transverse   number of sigma
! dimxc ~ size-x with dispersion, dimyc ~ size-y with dispersion,

 ns = 2;
 nt = 3;
 dimxc := sqrt( nt^2*table(twiss,betx)*beam->ex + ns^2*(beam->sige*table(twiss,dx))^2 );
 dimyc := sqrt( nt^2*table(twiss,bety)*beam->ey + ns^2*(beam->sige*table(twiss,dy))^2 );



 maketwiss: macro=
 {
!     select flag=twiss,column=name, s, l, APERTYPE, APER_1, APER_2;
      select flag=twiss,column=name, s, l, alfx, betx,dx, alfy, bety, dimxc;
     twiss, centre, beta0=initbeta0, DELTAP = 0.0, file="../out/optics_madx.out";
 };

 exec, maketwiss;

!show, LT.QFN10;


!write,table=twiss;
!value,table(twiss,LTLTBBI$START,alfx);
!value,table(twiss,LT.DHZ10,betx);
 ****************/







/*******************************************************************************
 * twiss
 *******************************************************************************/

 maketwiss: macro=
 {
     ptc_create_universe;
     ptc_create_layout,model=2,method=6,nst=5,exact;
     ptc_twiss,table=ptc_twiss,BETA0=INITBETA0,icase=5,no=1; ! ,file="twiss";
     ptc_end;


 };

 exec, maketwiss;

!write,table=ptc_twiss;
!value,table(ptc_twiss,LTLTBBI$START,alfa11);
!value,table(ptc_twiss,LT.DHZ10,beta11);




/***************************************************
 * Write ptc_twiss table. NB! Values at end of elements
 ***************************************************/
set,  format="-18s";
set,  format="10.5f";

! ns    ~ longitudinal number of sigma
! nt    ~ transverse   number of sigma
! dimxc ~ size-x with dispersion, dimyc ~ size-y with dispersion,
! value, beam->ex, beam->ey, beam->sige;

 ns = 2;
 nt = 3;
 dimxc := sqrt( nt^2*table(ptc_twiss,beta11)*beam->ex + ns^2*(beam->sige*table(ptc_twiss,disp1))^2 );
 dimyc := sqrt( nt^2*table(ptc_twiss,beta22)*beam->ey + ns^2*(beam->sige*table(ptc_twiss,disp3))^2 );



exec, maketwiss; ! Needs to be executed first, to make beta11, disp1, etc.
select,flag=ptc_twiss,clear;
!select,flag=ptc_twiss, column = name,s,l,alfa11,beta11,disp1,dimxc,alfa22,beta22,dimyc;
!select,flag=ptc_twiss, column = keyword,name,parent,l,s;
select,flag=ptc_twiss, column = name,angle,k1L,k2L,k3L,beta11,beta22,disp1,disp3,x,y,alfa11,alfa22,mu1,mu2,disp2,disp3,px,py;
exec, maketwiss;

!write,table=ptc_twiss,file="../out/optics_ptc.out";
!write,table=ptc_twiss,file="../out/optics_ptc.config";
 write,table=ptc_twiss,file="../out/optics_ptc.twiss";




/*******************************************************************************
 * Plot ltltbbi
 *******************************************************************************/
option, -info;
option, -echo;

resplot;
setplot, post=2;

plot, title='bi'   , table=ptc_twiss
                   , haxis=s
                   , vaxis1=beta11,beta22
                   , style:=100,symbol:=4,colour=100
                   , file = "../out/ptc";

plot, title='Twiss', table=ptc_twiss
                   , haxis=s
                   , vaxis1=beta11,beta22
                   , vaxis2=disp1
                   , range=#S/#e
                   , style:=100, symbol:=4, colour=100;

plot, title='Twiss', table=ptc_twiss
                   , haxis=s
                   , vaxis1=disp1,disp3
                   , range=#S/#e
                   , style:=100, symbol:=4, colour=100;

/* Use >gv madx01.eps  to plot */


/*******************************************************************************
 * Clean up (remove Maxwellian_bend_for_ptc.txt )
 *******************************************************************************/

system, "rm Maxwellian_bend_for_ptc.txt";


stop;







